/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package diary;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author HP
 */
public class JJavaDocument extends javax.swing.JPanel {

    Clipboard c;
    DiaryApp d;
    File f;

    /**
     * Creates new form JDocumentPanel
     */
    public JJavaDocument(DiaryApp d, Clipboard c) {
        initComponents();
        this.c = c;
        this.d = d;
        jButton8.hide();
    }

    public JJavaDocument(DiaryApp d, Clipboard c, File f) {
        initComponents();
        this.c = c;
        this.d = d;
        this.f = f;
        loadMe();
    }

    public void loadMe() {
        savedText = d.u.read(f);
        jEditorPane1.setText(savedText);
    }
    
    public String deLoadMe(){ 
        return jEditorPane1.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        copyPopup = new javax.swing.JPopupMenu();
        selected = new javax.swing.JMenuItem();
        all = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        function = new javax.swing.JMenu();
        pastePopup = new javax.swing.JPopupMenu();
        paste = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        message = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        ok = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        savePopup = new javax.swing.JPopupMenu();
        saveAll = new javax.swing.JMenuItem();
        saveAs = new javax.swing.JMenuItem();
        file = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser();
        jSplitPane1 = new javax.swing.JSplitPane();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSplitPane2 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();

        selected.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        selected.setText("Copy Selected (Ctrl + c)");
        selected.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectedMouseClicked(evt);
            }
        });
        selected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedActionPerformed(evt);
            }
        });
        copyPopup.add(selected);

        all.setText("Copy All (Ctrl + Shift +C)");
        all.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allMouseClicked(evt);
            }
        });
        copyPopup.add(all);
        copyPopup.add(jSeparator1);

        function.setText("Function Copy");
        copyPopup.add(function);

        paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        paste.setText("Paste (Ctrl + P)");
        paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteActionPerformed(evt);
            }
        });
        pastePopup.add(paste);
        pastePopup.add(jSeparator2);

        message.setMinimumSize(new java.awt.Dimension(370, 120));

        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        jButton8.setText("jButton8");

        javax.swing.GroupLayout messageLayout = new javax.swing.GroupLayout(message.getContentPane());
        message.getContentPane().setLayout(messageLayout);
        messageLayout.setHorizontalGroup(
            messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(ok)
                .addGap(24, 24, 24)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancel)
                .addContainerGap(87, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        messageLayout.setVerticalGroup(
            messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(messageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ok)
                    .addComponent(cancel)
                    .addComponent(jButton8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        saveAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveAll.setText("Save (Ctrl + S)");
        saveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAllActionPerformed(evt);
            }
        });
        savePopup.add(saveAll);

        saveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveAs.setText("Save As (Ctrl + Shift + S)");
        saveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsActionPerformed(evt);
            }
        });
        savePopup.add(saveAs);

        file.setMinimumSize(new java.awt.Dimension(582, 400));

        jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fileLayout = new javax.swing.GroupLayout(file.getContentPane());
        file.getContentPane().setLayout(fileLayout);
        fileLayout.setHorizontalGroup(
            fileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        fileLayout.setVerticalGroup(
            fileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/document-save.png"))); // NOI18N
        jButton1.setComponentPopupMenu(savePopup);
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/filter.png"))); // NOI18N
        jButton9.setText("Compile");
        jButton9.setToolTipText("Compile");
        jButton9.setFocusable(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton9);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/gtk-execute.png"))); // NOI18N
        jButton10.setText("Run");
        jButton10.setToolTipText("Compile");
        jButton10.setFocusable(false);
        jToolBar1.add(jButton10);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit-copy.png"))); // NOI18N
        jButton3.setToolTipText("Copy");
        jButton3.setComponentPopupMenu(copyPopup);
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit-cut.png"))); // NOI18N
        jButton4.setToolTipText("Cut");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit-paste.png"))); // NOI18N
        jButton5.setToolTipText("Paste");
        jButton5.setComponentPopupMenu(pastePopup);
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/document-properties.png"))); // NOI18N
        jButton6.setToolTipText("Properties");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/system-search.png"))); // NOI18N
        jButton7.setToolTipText("Find");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit-delete.png"))); // NOI18N
        jButton2.setToolTipText("Close");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jSplitPane1.setTopComponent(jToolBar1);

        jSplitPane2.setDividerLocation(0);

        jEditorPane1.setContentType("text/formatted");
        jEditorPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jEditorPane1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jEditorPane1);

        jSplitPane2.setRightComponent(jScrollPane1);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane2.setViewportView(jTree1);

        jSplitPane2.setLeftComponent(jScrollPane2);

        jSplitPane1.setRightComponent(jSplitPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        c.add(jEditorPane1.getSelectedText());
        refreshClipboard();
        new Sound(d).play("Menu Command");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        String txt = jEditorPane1.getSelectedText();
        String a = jEditorPane1.getText();
        int ss = jEditorPane1.getSelectionStart();
        String b = a.substring(0, jEditorPane1.getSelectionStart());
        String c = a.substring(jEditorPane1.getSelectionEnd());
        jEditorPane1.setText(b + c);
        this.c.add(txt);
        jEditorPane1.setCaretPosition(ss);
        refreshClipboard();
        new Sound(d).play("Menu Command");
    }//GEN-LAST:event_jButton4MouseClicked

    private void selectedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectedMouseClicked
        // TODO add your handling code here:
        c.add(jEditorPane1.getSelectedText());
        refreshClipboard();
        new Sound(d).play("Menu Command");
    }//GEN-LAST:event_selectedMouseClicked

    private void allMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMouseClicked
        // TODO add your handling code here:
        c.add(jEditorPane1.getText());
        refreshClipboard();
        new Sound(d).play("Menu Command");
    }//GEN-LAST:event_allMouseClicked

    private void pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteActionPerformed
        // TODO add your handling code here:
        int i = jEditorPane1.getCaretPosition();
        String le = jEditorPane1.getText().substring(0, i);
        String ri = jEditorPane1.getText().substring(i + 1);
        String s = (String) c.pop();
        jEditorPane1.setText(le + s + ri);
        new Sound(d).play("Menu Command");
    }//GEN-LAST:event_pasteActionPerformed

    private void selectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedActionPerformed
        // TODO add your handling code here:
        c.add(jEditorPane1.getSelectedText());
        refreshClipboard();
        new Sound(d).play("Menu Command");
    }//GEN-LAST:event_selectedActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (c.v.isEmpty() || pastePopup.getComponentCount() == 2) {
            new Sound(d).play("Error");
        } else {
            int i = jEditorPane1.getCaretPosition();
            String le = jEditorPane1.getText().substring(0, i);
            String ri = jEditorPane1.getText().substring(i);
            String s = (String) c.pop();
            jEditorPane1.setText(le + s + ri);
            if (pastePopup.getComponentCount() != 0) {
                pastePopup.remove(pastePopup.getComponentCount());
            }
            new Sound(d).play("Menu Command");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void saveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsActionPerformed
        // TODO add your handling code here:
        file.show();
    }//GEN-LAST:event_saveAsActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        String s = (evt.getActionCommand());
        if (s.equals("ApproveSelection")) {
            final File to = jFileChooser1.getSelectedFile();
            System.out.println(to);
            if (to.exists()) {
                System.out.println("Exists, catching user option...");
                ok.removeActionListener(ok.getActionListeners()[0]);
                ok.addActionListener(new ActionListener() {

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        save(to);
                        message("Saved!", "!");
                        savedText = jEditorPane1.getText();
                        if (jEditorPane1.getText().equals(savedText)) {
                            saved = true;
                        } else {
                            saved = false;
                        }
                        message.hide();
                    }
                });

                cancel.removeActionListener(cancel.getActionListeners()[0]);
                cancel.addActionListener(new ActionListener() {

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        message.hide();
                    }
                });
                message.setBounds(file.getX() + 40, file.getY() + 80, message.getWidth(), message.getHeight());
                message("The file " + to.getAbsolutePath() + " already exists!"
                        + "\nOver write?", "Save?");
            } else {
                save(to);
                savedText = jEditorPane1.getText();
                if (jEditorPane1.getText().equals(savedText)) {
                    saved = true;
                } else {
                    saved = false;
                }
            }
        } else if (s.equals("CancelSelection")) {
            file.hide();
        }
    }//GEN-LAST:event_jFileChooser1ActionPerformed
    String savedText;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (f == null) {
            file.show();
        } else {
            save(f);
            message("Saved!", "!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        // TODO add your handling code here:
        message.hide();

    }//GEN-LAST:event_okActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        saveQ();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jEditorPane1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jEditorPane1KeyTyped
        // TODO add your handling code here:
        if (jEditorPane1.getText().equals(savedText)) {
            saved = true;
        } else {
            saved = false;
        }
        
    }//GEN-LAST:event_jEditorPane1KeyTyped

    private void saveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAllActionPerformed
        // TODO add your handling code here:
        if (f == null) {
            file.show();
        } else {
            save(f);
            message("Saved!", "!");
        }
    }//GEN-LAST:event_saveAllActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        d.compile(this);
    }//GEN-LAST:event_jButton9ActionPerformed

    public static void main(String[] args) {
        JFrame j = new JFrame();
        j.add(new JJavaDocument(new DiaryApp(), new Clipboard()));
        j.setVisible(true);
    }
    boolean saved;

    public void closeWithoutSave() {
        d.removeJIDEDoc(this);
        this.hide();
    }

    public void refreshClipboard() {
        JMenuItem all = (JMenuItem) pastePopup.getComponent(0);
        JPopupMenu.Separator se = (JPopupMenu.Separator) pastePopup.getComponent(1);
        pastePopup.removeAll();
        pastePopup.add(all);
        pastePopup.add(se);
        for (Object o : c.getAllObjects()) {
            String s = (String) o;
            String disp = s;
            if (s.length() > 20) {
                disp = s.substring(0, 27) + "...";
            }
            final JMenuItem a = new JMenuItem(disp);
            s = "<html>" + s.replaceAll("\n", "<br>");
            a.setToolTipText(s);
            a.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    pasteMenuItem(a);
                }
            });
            pastePopup.add(a);
        }
    }
    int pre;

    public void pasteMenuItem(Object o) {
        JMenuItem j = (JMenuItem) o;
        String s = j.getToolTipText().replaceAll("<br>", "\n");
        s = s.replaceAll("<html>", "");
        try {
            int i = jEditorPane1.getCaretPosition();
            String le = jEditorPane1.getText().substring(0, i);
            String ri = jEditorPane1.getText().substring(i + 1);
            jEditorPane1.setText(le + s + ri);
        } catch (StringIndexOutOfBoundsException e) {
        } finally {
            if (jEditorPane1.getText().length() == 0) {
                jEditorPane1.setText(s);
            }
        }
        j.getParent().remove(j);
    }

    public void message(String msg) {
        jLabel1.setText(msg);
        message.setTitle("Message :");
        message.show();
    }

    public void message(String msg, String title) {
        jLabel1.setText(msg);
        message.setTitle(title);
        message.show();
    }

    public void save(File f) {
        this.f = f;
        PrintWriter pw = null;
        try {
            pw = new PrintWriter(new BufferedWriter(new FileWriter(f)));
            pw.println(deLoadMe());
        } catch (IOException ex) {
            System.out.println(ex);
        } finally {
            pw.close();
        }
    }

    @Override
    public void repaint() {
        super.repaint();
        if (d != null) {
            d.repaint();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JMenuItem all;
    public javax.swing.JButton cancel;
    public javax.swing.JPopupMenu copyPopup;
    public javax.swing.JDialog file;
    public javax.swing.JMenu function;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton10;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    public javax.swing.JButton jButton5;
    public javax.swing.JButton jButton6;
    public javax.swing.JButton jButton7;
    public javax.swing.JButton jButton8;
    public javax.swing.JButton jButton9;
    public javax.swing.JEditorPane jEditorPane1;
    public javax.swing.JFileChooser jFileChooser1;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JPopupMenu.Separator jSeparator1;
    public javax.swing.JPopupMenu.Separator jSeparator2;
    public javax.swing.JSplitPane jSplitPane1;
    public javax.swing.JSplitPane jSplitPane2;
    public javax.swing.JToolBar jToolBar1;
    public javax.swing.JTree jTree1;
    public javax.swing.JDialog message;
    public javax.swing.JButton ok;
    public javax.swing.JMenuItem paste;
    public javax.swing.JPopupMenu pastePopup;
    public javax.swing.JMenuItem saveAll;
    public javax.swing.JMenuItem saveAs;
    public javax.swing.JPopupMenu savePopup;
    public javax.swing.JMenuItem selected;
    // End of variables declaration//GEN-END:variables

    public void saveQ() {
        // TODO add your handling code here:
        if (jEditorPane1.getText().equals(savedText)) {
            saved = true;
        } else {
            saved = false;
        }
        if (saved) {
            getParent().remove(this);
        } else {
            ok.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    if (f == null) {
                        message.hide();
                        file.show();
                    } else {
                        save(f);
                    }
                }
            });
            ok.setText("Yes");
            cancel.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    message.hide();
                }
            });
            jButton8.setText("No");
            jButton8.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    closeWithoutSave();
                    message.hide();
                }
            });
            jButton8.show();
            message("The Document is changed!\nSave?", "Save?");
        }
    }
}
